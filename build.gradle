buildscript {
        repositories {
            maven {
                url 'https://plugins.gradle.org/m2/'
            }
        }
        dependencies {
           classpath 'com.bmuschko:gradle-docker-plugin:4.3.0'
        }
    }

plugins {
    id 'org.springframework.boot' version '2.7.4'
    id 'io.spring.dependency-management' version '1.0.14.RELEASE'
    id 'java'
    id 'jacoco'
    id 'application'
    id 'com.bmuschko.docker-java-application'
}

group = 'co.edu.unisabana'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'
mainClassName = 'hello.Application'

repositories {
    mavenCentral()
    jcenter()
}
jacoco {
    toolVersion = "0.8.8"
}

test {
    useJUnitPlatform()
    finalizedBy jacocoTestReport
}
jacocoTestReport {
    dependsOn test // tests are required to run before generating the report

    afterEvaluate {
        classDirectories.setFrom(files(classDirectories.files.collect {
            fileTree(dir: it, exclude: [
                    "**/dto/**",
                    "**/entity/*",
                    "**/model/*"
            ])
        }))
    }
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation group: 'com.mysql', name: 'mysql-connector-j', version: '8.0.31'
    implementation group: 'com.fasterxml.jackson.core', name: 'jackson-databind', version: '2.14.2'
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
}

jar {
    enabled = true
    baseName = 'gs-accessing-data-rest'
    version = '0.1.0'
}


tasks.named('test') {
    useJUnitPlatform()
}
docker {
    javaApplication {
        baseImage = 'parcial2SD'
        maintainer = 'Sebastian y David'
        ports = [8080]
        tag = 'https://github.com/David-Galeano-USabana/23-2-parcial-DavidSebastian'
    }
}

